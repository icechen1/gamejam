//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package com.gamejam.crashrun;

import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import com.gamejam.crashrun.game.RandomPointProvider;
import com.google.android.gms.maps.model.LatLng;
import com.googlecode.androidannotations.api.BackgroundExecutor;

public final class ViewMapFragment_
    extends ViewMapFragment
{

    private View contentView_;
    private Handler handler_ = new Handler();

    private void init_() {
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_();
        super.onCreate(savedInstanceState);
    }

    private void afterSetContentView_() {
        setUpMap();
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        afterSetContentView_();
        return contentView_;
    }

    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @Override
    public void addPoly(final RandomPointProvider mRPP) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    ViewMapFragment_.super.addPoly(mRPP);
                } catch (RuntimeException e) {
                    Log.e("ViewMapFragment_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void UiAddOverlay(final com.google.android.gms.maps.model.GroundOverlayOptions GroundOverlayOptions) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    ViewMapFragment_.super.UiAddOverlay(GroundOverlayOptions);
                } catch (RuntimeException e) {
                    Log.e("ViewMapFragment_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void UiAddMarker(final com.google.android.gms.maps.model.MarkerOptions MarkerOptions) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    ViewMapFragment_.super.UiAddMarker(MarkerOptions);
                } catch (RuntimeException e) {
                    Log.e("ViewMapFragment_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void addMarker(final LatLng Node, final int type) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    ViewMapFragment_.super.addMarker(Node, type);
                } catch (RuntimeException e) {
                    Log.e("ViewMapFragment_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void generatePoint(final LatLng location) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    ViewMapFragment_.super.generatePoint(location);
                } catch (RuntimeException e) {
                    Log.e("ViewMapFragment_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void updateLocation(final LatLng location) {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    ViewMapFragment_.super.updateLocation(location);
                } catch (RuntimeException e) {
                    Log.e("ViewMapFragment_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

}
